# #!/bin/bash
snippet #!
	#!/bin/bash

snippet header
	#!/bin/bash
	__scriptVersion=${1:0.1}
	__scriptPID=$$
	__scriptPath="$(cd "$(realpath "$(dirname "\$0")")"; pwd -P )"
	__scriptFile="$(basename "\$0")"

	# Function ===================================================================== 
	#           Name:  `expand('%')`
	#         Author:  `g:snips_author` 
	#       Homepage:  `g:snips_authorsite`
	#            Git:  `g:snips_authorgit`/${2:repo}.git
	#    Description:  ${3:functionDescription}
	#        Created:  `strftime("%Y-%m-%d")`
	#       Modified:  `strftime("%Y-%m-%d")`
	# ==============================================================================
	$0
snippet if
	if [[ ${1:condition} ]]; then
		${2:#statements}
	fi
snippet elif
	elif [[ ${1:condition} ]]; then
		${2:#statements}
snippet for
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${3:#statements}
	done
snippet forin
	for ${1:i} in ${2:stack}; do
		${0:${VISUAL}}
	done
snippet while
	while [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet whilec
	count=0;
	while [ count -lt ${1:2} ]; do
	    ${2:#loop}
	    (( count++ ))
	done
snippet ((
	(( ${1:counter} ${2:aritmetic} ))
snippet until
	until [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${3};;
	esac
snippet flags
	while getopts ':${1:F}' OPTS
	do 
	    case $OPTS in
		$1  ) ${2:#Commands};;
		\? ) echo "Unknown option: -$OPTARG" >&2; exit 1;;
		:  ) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
		*  ) echo "Unimplimented option: -$OPTARG" >&2; exit 1;;
	    esac 
	done
	shift $(( $OPTIND -1 ))
snippet getopt

	[ -z $(cat) ] && input=1 || input=0
	while [ ${#@} -gt $input ]; do
	    case "$${0:1}" in
		--help		| -h ) usage; exit 0;;
		--version	| -V ) echo "$${0:0} -- Version $__scriptVersion"; exit 0;;
	        --$4		| -$5 ) ${7:flag_actions}; shift;;
	    esac
	done
	#make either last argument or fd1 
	input="${${0:1}:-$(cat)}"

	}

snippet fun
	# ${2:function description}
	${1:function_name}() {
		${0:# function_body}
	}
snippet select
	${1:options}=(${2:"option"})
	select opt in "${$1[@]}"; do
	    case $REPLY in
		q|n|quit|cancel|exit)
		    exit;;
		''|[!0-9] )
		    echo "Invalid answer, try again...";;
		[0-9] )
		    if [ $REPLY -gt ${#$1[@]} ]; then
			    ${3:sel}="$opt" 
			    ${4:selIndex}=$(( REPLY-1 ))
			    break
		    else
			    echo "Invalid answer, try again..."
		    fi;;
	    esac
	done

