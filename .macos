echo "!/bin/bash"
echo "migrate dotfiles to home"

sudo -v
echo "keep sudo alive"
while true; do 
    sudo -n true; 
    sleep 60; 
    kill -0 "$$" || exit; 
done 2>/dev/null &
echo ""
echo "#install homebrew"
echo "ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)""
echo "#install brew-cask"
echo "brew doctor"
echo ""
echo "brew tap phinze/cask"
echo "brew install brew-cask"
echo ""
echo "# Make sure we’re using the latest Homebrew"
echo "brew update"
echo "# Upgrade any already-installed formulae"
echo "brew upgrade"
echo "# Install GNU core utilities (those that come with OS X are outdated)"
echo "# Don’t forget to add `$(brew --prefix coreutils)/libexec/gnubin` to `$PATH`."
echo "brew install coreutils"
echo "# Install some other useful utilities like `sponge`"
echo "brew install moreutils"
echo "# Install GNU `find`, `locate`, `updatedb`, and `xargs`, g-prefixed"
echo "brew install findutils"
echo "# Install Bash 4"
echo "brew install bash"
echo ""
echo "# Install wget with IRI support"
echo "brew install wget --enable-iri"
echo ""
echo "# Install RingoJS and Narwhal"
echo "# Note that the order in which these are installed is important; see http://git.io/brew-narwhal-ringo."
echo "brew install ringojs"
echo "brew install narwhal"
echo ""
echo "# Install more recent versions of some OS X tools"
echo "brew install vim --override-system-vi"
echo "brew install homebrew/dupes/grep"
echo "brew install josegonzalez/homebrew-php/php55"
echo ""
echo "# This formula didn’t work well last time I tried it:"
echo "#install homebrew/dupes/screen"
echo ""
echo "# Install other useful binaries"
echo "brew install ack"
echo "brew install pv"
echo "#install exiv2"
echo "brew install git"
echo "brew install imagemagick --with-webp"
echo "brew install lynx"
echo "brew install node"
echo "brew install pigz"
echo "brew install rename"
echo "brew install rhino"
echo "brew install tree"
echo "brew install webkit2png"
echo "brew install zopfli"
echo "brew install p7zip"
echo ""
echo "brew install homebrew/versions/lua52"
echo ""
echo "for i in coreutils moreutils findutils bash \"
echo "   "wget --enable-iri" ringojs narwhal \"
echo "   "vim --override-system-vi" \"
echo "   "homebrew/dupes/grep" \"
echo "   "josegonzalez/homebrew-php/php55" \"
echo "   ack pv git "imagemagick --with-webp" lynx \"
echo "   node pigz rename rhino tree webkit2png zopfli p7zip;"
echo "do"
echo "   brew install $i"
echo "done;"
echo ""
echo "for i in google-chrome google-chrome-canary totalterminal tor-browser transmission vlc macvim; "
echo "do"
echo "   brew cask install "$i" 2> /dev/null"
echo "done;"
echo ""
echo "# Remove outdated versions from the cellar"
echo "brew cleanup"

chsh -s /bin/zsh $(whoami)

echo "OSX Settings"
echo "Always show scrollbars"
defaults write NSGlobalDomain AppleShowScrollBars -string "Always"
echo "Expand save panel by default"
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
echo "Save to disk (not to iCloud) by default"
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
echo "Automatically quit printer app once the print jobs complete"
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true
echo "Disable the “Are you sure you want to open this application?” dialog"
defaults write com.apple.LaunchServices LSQuarantine -bool false
echo "Display ASCII control characters using caret notation in standard text views
Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`"
defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true
echo "Disable Resume system-wide"
defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false
echo "Reveal IP address, hostname, OS version, etc. when clicking the clock in the login window"
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName
echo "Restart automatically if the computer freezes"
systemsetup -setrestartfreeze on
echo "Disable smart quotes as they’re annoying when typing code"
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
echo
echo "#### SSD/Time Machine Settings ####"
echo
echo "Disable local Time Machine snapshots"
sudo tmutil disablelocal
echo "Disable hibernation (speeds up entering sleep mode)"
sudo pmset -a hibernatemode 0
echo "Remove the sleep image file to save disk space"
sudo rm /Private/var/vm/sleepimage
echo "Create a zero-byte file instead…"
sudo touch /Private/var/vm/sleepimage
echo "…and make sure it can’t be rewritten"
sudo chflags uchg /Private/var/vm/sleepimage
echo "Disable the sudden motion sensor as it’s not useful for SSDs"
sudo pmset -a sms 0
echo "Dont ask if External disks can be Time Machine"
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true
echo "Trackpad: enable tap to click for this user and for the login screen"
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
echo "Disable “natural” (Lion-style) scrolling"
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false
echo "Enable full keyboard access for all controls"
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3
echo "Require password immediately after sleep or screen saver begins"
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0
echo "Save screenshots to the desktop"
defaults write com.apple.screencapture location -string "${HOME}/Desktop"
echo "Finder: disable window animations and Get Info animations"
defaults write com.apple.finder DisableAllAnimations -bool true
echo "Set Desktop as the default location for new Finder windows"
echo "For other paths, use `PfLo` and `file:///full/path/here/`"
defaults write com.apple.finder NewWindowTarget -string "PfLo"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"
echo "Show icons for hard drives, servers, and removable media on the desktop"
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true
echo "Finder: show hidden files by default"
defaults write com.apple.finder AppleShowAllFiles -bool true
echo "Finder: show all filename extensions"
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
echo "Finder: show status bar"
defaults write com.apple.finder ShowStatusBar -bool true
echo "Finder: show path bar"
defaults write com.apple.finder ShowPathbar -bool true
echo "Finder: allow text selection in Quick Look"
defaults write com.apple.finder QLEnableTextSelection -bool true
echo "Display full POSIX path as Finder window title"
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
echo "When performing a search, search the current folder by default"
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
echo "Disable the warning when changing a file extension"
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
echo "Enable spring loading for directories"
defaults write NSGlobalDomain com.apple.springing.enabled -bool true
echo "Remove the spring loading delay for directories"
defaults write NSGlobalDomain com.apple.springing.delay -float 0
echo "Avoid creating .DS_Store files on network volumes"
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
echo "Disable disk image verification"
defaults write com.apple.frameworks.diskimages skip-verify -bool true
defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true
echo "Automatically open a new Finder window when a volume is mounted"
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true
echo "Show item info near icons on the desktop and in other icon views"
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
echo "Show item info to the right of the icons on the desktop"
/usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist
echo "Enable snap-to-grid for icons on the desktop and in other icon views"
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
echo "Use list view in all Finder windows by default"
echo "Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`"
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
echo "Disable the warning before emptying the Trash"
defaults write com.apple.finder WarnOnEmptyTrash -bool false
echo "Show the ~/Library folder"
chflags nohidden ~/Library
echo "Expand the following File Info panes:"
echo "“General”, “Open with”, and “Sharing & Permissions”"
defaults write com.apple.finder FXInfoPanesExpanded -dict General -bool true OpenWith -bool true Privileges -bool true
echo "Minimize windows into their application’s icon"
defaults write com.apple.dock minimize-to-application -bool true
echo "Enable spring loading for all Dock items"
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

echo "Show indicator lights for open applications in the Dock"
defaults write com.apple.dock show-process-indicators -bool true
echo "Don’t animate opening applications from the Dock"
defaults write com.apple.dock launchanim -bool false
echo "Speed up Mission Control animations"
defaults write com.apple.dock expose-animation-duration -float 0.1
echo "Don’t group windows by application in Mission Control"
echo "(i.e. use the old Exposé behavior instead)"
defaults write com.apple.dock expose-group-by-app -bool false
echo "Disable Dashboard"
defaults write com.apple.dashboard mcx-disabled -bool true
echo "Don’t show Dashboard as a Space"
defaults write com.apple.dock dashboard-in-overlay -bool true
echo "Remove the auto-hiding Dock delay"
defaults write com.apple.dock autohide-delay -float 0
echo "Remove the animation when hiding/showing the Dock"
defaults write com.apple.dock autohide-time-modifier -float 0
echo "Enable the 2D Dock"
defaults write com.apple.dock no-glass -bool true
echo "Automatically hide and show the Dock"
defaults write com.apple.dock autohide -bool true
echo "Make Dock more transparent"
defaults write com.apple.dock hide-mirror -bool true
echo "Reset Launchpad"
find "~/Library/Application Support/Dock" -name "*.db" -maxdepth 1 -delete
echo "Disable Safari’s thumbnail cache for History and Top Sites"
defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2
echo "Enable the Develop menu and the Web Inspector in Safari"
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

echo "Add a context menu item for showing the Web Inspector in web views"
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true
echo "Hide Spotlight tray-icon (and subsequent helper)"
echo "Disable Spotlight indexing for any volume that gets mounted and has not yet been indexed before."
echo "Use `sudo mdutil -i off "/Volumes/foo"` to stop indexing any volume."
sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes"
echo "Change indexing order and disable some file types"
defaults write com.apple.spotlight orderedItems -array \
	'{"enabled" = 1;"name" = "APPLICATIONS";}' \
	'{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
	'{"enabled" = 1;"name" = "DIRECTORIES";}' \
	'{"enabled" = 1;"name" = "PDF";}' \
	'{"enabled" = 1;"name" = "FONTS";}' \
	'{"enabled" = 0;"name" = "DOCUMENTS";}' \
	'{"enabled" = 0;"name" = "MESSAGES";}' \
	'{"enabled" = 0;"name" = "CONTACT";}' \
	'{"enabled" = 0;"name" = "EVENT_TODO";}' \
	'{"enabled" = 0;"name" = "IMAGES";}' \
	'{"enabled" = 0;"name" = "BOOKMARKS";}' \
	'{"enabled" = 0;"name" = "MUSIC";}' \
	'{"enabled" = 0;"name" = "MOVIES";}' \
	'{"enabled" = 0;"name" = "PRESENTATIONS";}' \
	'{"enabled" = 0;"name" = "SPREADSHEETS";}' \
	'{"enabled" = 0;"name" = "SOURCE";}'
echo "Load new settings before rebuilding the index"
killall mds > /dev/null 2>&1
echo "Make sure indexing is enabled for the main volume"
sudo mdutil -i on / > /dev/null
echo "Rebuild the index from scratch"
sudo mdutil -E / > /dev/null

echo "Use a modified version of the Pro theme by default in Terminal.app"
open "${HOME}/dropbox/solarized/osx-terminal.app-colors-solarized/Solarized Dark ansi.terminal"
sleep 1 # Wait a bit to make sure the theme is loaded
defaults write com.apple.terminal "Default Window Settings" -string "Solarized Dark ansi"
defaults write com.apple.terminal "Startup Window Settings" -string "Solarized Dark ansi"

echo "Prevent Time Machine from prompting to use new hard drives as backup volume"
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true
echo "Disable local Time Machine backups"
hash tmutil &> /dev/null && sudo tmutil disablelocal
echo "Disable automatic emoji substitution (i.e. use plain text smileys)"
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticEmojiSubstitutionEnablediMessage" -bool false

echo "Disable smart quotes as it’s annoying for messages that contain code"
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false
for app in "Activity Monitor" "cfprefsd" \
	"Dock" "Finder" "Messages" "Safari" "SystemUIServer" \
	"Terminal"; do
	killall "${app}" > /dev/null 2>&1
done
echo "Done. Note that some of these changes require a logout/restart to take effect."

