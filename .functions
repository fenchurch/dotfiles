#!/bin/bash

#file line functions
readline() { sed "${1}q;d" "$2"; }
deleteline() { sed -ie ${1}d "$2"; }
replaceline(){ sed -ie "${1}s/.*/${2}/" "$3"; }
# mcd:          Makes new Dir and jumps inside
mcd () { mkdir -p "$1" && cd "$1"; }
# colors #
##########
green(){ echo "\033[35m$@\033[39m"; }   
yellow(){ echo "\033[33m$@\033[39m";}
red(){ echo "\e[39m$@\e[39m";}
underline(){ echo "\e4m$@\e[24m";}
bold(){ echo "\e[1m$@\e[21m"; }
blink(){ echo "\e[7m$@\e[27m"; }

gitpush(){ git commit -a -m "$@"; git push; }

# Networking #
##############

readssl(){ 
    if [ -e "$@" ]; then
    #read from a file
        openssl x509 -in "$@" -noout -text;
    else
    #read from url
        openssl s_client -showcerts -connect "$@" 
    fi
}

if [[ `uname` == Darwin ]]; then
    #ipsec vpn
    vpn () {
        #store $host, $localIP, $interface and $sharedSecret here
        ~/.vpn
        if [[ "$(dig "$host" +short)" != $localIP ]]; then
            [[ "$(scutil --nc status "$interface" | head -n 1)" != "Connected" ]] && \
                scutil --nc start "$interface" --secret "$sharedSecret" || :
            c=0
            while [[ "$(scutil --nc status "$interface" | head -n 1)" != "Connected" && $c -lt 10 ]]; do
                [[ $c == 0 ]] && echo -n $(scutil --nc status "$interface" | head -n 1) || echo -n "."
                sleep 1; ((c+=1))
            done
            green $'\n'VPN \("$interface"\) $(scutil --nc status "$interface" | head -n 1)
        else
            if [[ "$(scutil --nc status "$interface" | head -n 1)" == "Connected" ]]; then
                scutil --nc stop "$interface"
                red VPN \($interface\) Disconnected
            fi
        fi
    }

    renewdhcp(){
        if sudo networksetup -setbootp "${1:-Ethernet}"; then 
            sudo networksetup -setdhcp "${1:-Ethernet}"
        fi
    }
    # ql:           Opens any file in MacOS Quicklook Preview
    ql () {  qlmanage -p "$@" >& /dev/null; }
fi

