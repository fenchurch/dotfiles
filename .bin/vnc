#!/bin/bash
__scriptVersion=1.0
__scriptPID=$$
__scriptPath="$(dirname "$0")"
__scriptFile="$(basename "$0")"

# Function ========================================================   
#           Name:  vnc
#         Author:  Rusty Gibbs 
#       Homepage:  http://www.wickedidol.com
#            Git:  https://github.com/fenchurch/dotfiles/bin
#    Description:  vnc
#        Created:  2018-04-12
#       Modified:  2018-05-21
# ================================================================= 

#Settings
config=~/.ssh/config
timeout=1
ignore=( git wi vw firewall torrent nas sonarr)
port=5900

host="${1##*@}"
cred="${1%@*}"


join(){
    IFS="$1"; shift
    echo "$*"; 
}
array_value(){
    key=$1; shift
    echo "$*" | while read line; do 
        if [[ ${line%=*} == $key ]]; then
            echo ${line#*=}
            return
        fi
    done
}

knownHosts(){
    awk '/Host / { h=$2; next}
        /Host / && h!="" { h="" }
        /User/ && h!="" { u=$2 }
        /Hostname/ && h!="" {print h"="u"@"$2}' $config | \
        grep -Ev $(join '|' ${ignore[*]})
}
knownHost(){
    array_value "$1" "$(knownHosts)"
}

testHost(){
    while true ; do
        case "$1" in
        --port  |   -p ) port=$2; shift 2;;
        --timeout | -t ) timeout=$2; shift 2;;
        *) break;;
        esac
    done
    #make either last argument or fd1 
    echo -n "Testing hosts " >&2
    echo "${@:-$(</dev/stdin)}" | while read host; do
        echo -n "." >&2
        nc -G $timeout -z ${host#*@} $port 2>&- && echo "$host"
    done
    echo "" >&2
}
selectHost(){
    PS3="Select a host (type quit to cancel) : "
    select opt in `localhosts | sed -e 's/=.*$//g'`; do
        case $REPLY in
        q|n|quit|cancel|exit)
            exit;;
        * )
            hostO=$(knownHost $opt)
            hostR=$(knownHost $REPLY)
            if [[ "$hostO" == "" && "$hostR" == "" ]]; then
                echo "Invalid answer, try again..."
            elif [[ "$hostO" != "" ]]; then
                host="${hostO#*@}"
                cred="${hostO%%@*}"
                break;
            elif [[ "$hostR" != "" ]]; then
                host="${hostR#*@}"
                cred="${hostR%%@*}"
                break;
            fi;;
        esac
    done
}
main(){
    if [[ "$host" != "${host%:*}" ]]; then 
        port=${host%:*}
        host=${host##*:}
    fi
    [[ "$host" == "" ]] && selectHost || knownHost=$(knownHost $host)
    [ -n "$knownHost" ] && host="${knownHost##*@}" && cred="${knownHost%@*}"
    [[ "$cred" == "$host" ]] && cred="" || cred="$cred@"
   
    if testHost "$host" 1>/dev/null; then
        echo "Opening vnc to $cred$host on port $port"
        open vnc://"$cred$host:$port"
    else
        echo -e "\033[31mVNC port ($port) not open on $host\033[30m"
        return 1;
    fi
}
main
